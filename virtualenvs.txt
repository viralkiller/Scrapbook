/home/nodesgpt/.virtualenvs/myenv38/


python3.8 --version
mkvirtualenv --python=/usr/bin/python3.8 myenv38
[creates folder]

[WSGI file]
# This file contains the WSGI configuration required to serve up your
# web application at http://<your-username>.pythonanywhere.com/
# It works by setting the variable 'application' to a WSGI handler of some
# description.
#
# The below has been auto-generated for your Flask project

import sys

# add your project directory to the sys.path
project_home = '/home/nodesgpt'
if project_home not in sys.path:
    sys.path = [project_home] + sys.path

# import flask app but need to call it "application" for WSGI to work
from flask_app import app as application  # noqa




[set the virtual env field in the Web section]
[open console from Web section, reinstall pips]

pip3.8 install flask-cors
pip3.8 install Flask-Mail
pip3.8 install Flask-SQLAlchemy
pip3.8 install SQLAlchemy-Utils
pip3.8 install Werkzeug
pip3.8 install itsdangerous
pip3.8 install user-agents
pip3.8 install openai
pip3.8 install pytube
---
ignore:
pip install flask-cors
pip install Flask-Mail
pip install Flask-SQLAlchemy
pip install SQLAlchemy-Utils
pip install Werkzeug
pip install itsdangerous
pip install user-agents
pip install openai
pip install pytube

pip install flask-cors
pip install Flask-Mail
pip install Flask-SQLAlchemy
pip install SQLAlchemy-Utils
pip install Werkzeug
pip install itsdangerous
pip install user-agents
pip install openai
pip install pytube

#extended for virtualenv
pip install Flask
pip install Flask-Login
pip install Flask-WTF
pip install requests
pip install Pillow
pip install pandas
pip install cryptography


#app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///sql/users.db'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////home/nodesgpt/sql/users.db'

chmod +x _Trans_Functions.py
#!/usr/bin/env python3.8
#!/home/nodesgpt/.virtualenvs/myenv38/bin/python3.8

further issues were fixed with:
pip3.8 uninstall pydantic
pip3.8 install pydantic
